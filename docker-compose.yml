version: '3.8'

services:
  # Go development environment
  go-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: go-builder
    container_name: scisimgo-go-dev
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
    working_dir: /app
    environment:
      - GO_ENV=development
      - CGO_ENABLED=0
    command: sh -c "go mod download && tail -f /dev/null"
    profiles:
      - dev

  # Python development environment
  python-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-builder
    container_name: scisimgo-python-dev
    volumes:
      - .:/app
      - python-cache:/root/.cache/pip
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    command: sh -c "pip install -r requirements.txt && tail -f /dev/null"
    profiles:
      - dev

  # Jupyter notebook server
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-builder
    container_name: scisimgo-jupyter
    volumes:
      - .:/app
      - jupyter-data:/root/.jupyter
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    profiles:
      - dev
      - jupyter

  # Production simulation runner
  simulation-runner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scisimgo-runner
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - GO_ENV=production
      - PYTHONPATH=/app
    command: ["/app/sir-simulator", "--population", "10000", "--duration", "60s"]
    profiles:
      - prod

  # Data analysis service
  analysis-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scisimgo-analysis
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app
    command: ["python", "scripts/run_all_simulations.py"]
    depends_on:
      - simulation-runner
    profiles:
      - prod

  # Monitoring and logging
  monitoring:
    image: grafana/grafana:latest
    container_name: scisimgo-monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    profiles:
      - monitoring

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: scisimgo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

volumes:
  go-mod-cache:
    driver: local
  python-cache:
    driver: local
  jupyter-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  default:
    name: scisimgo-network
    driver: bridge
