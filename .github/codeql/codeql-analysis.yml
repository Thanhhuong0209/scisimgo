name: "CodeQL Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go', 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: ${{ github.workspace }}/results.sarif

  # Additional security analysis
  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Go security checks
      if: matrix.language == 'go'
      run: |
        echo "Running Go security checks..."
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... || true
        
    - name: Run Python security checks
      if: matrix.language == 'python'
      run: |
        echo "Running Python security checks..."
        pip install safety bandit
        safety check -r requirements.txt || true
        bandit -r notebooks/ scripts/ || true

  # Code quality analysis
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Go linting
      if: matrix.language == 'go'
      run: |
        echo "Running Go linting..."
        go install golang.org/x/lint/golint@latest
        golint ./... || true
        
    - name: Run Python linting
      if: matrix.language == 'python'
      run: |
        echo "Running Python linting..."
        pip install flake8 black isort
        flake8 notebooks/ scripts/ || true
        black --check notebooks/ scripts/ || true
        isort --check-only notebooks/ scripts/ || true
